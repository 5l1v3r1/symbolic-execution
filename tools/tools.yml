# Program analysis, instrumentation, and solver tools.

tools:
  ABC:
    since: 2015
    description: string constraint solver and model counter
    url: https://vlab.cs.ucsb.edu/ABC/
    github: vlab-cs-ucsb/ABC
    type: SMT solver
  ABsolver:
    os: Linux
    license: CPL
    input: [SMT-LIB 1.2, DIMACS]
    api: C++
    technique: DPLL
    description: DPLL-based SMT solver
  ATOM:
    since: 1994
    type: instrumentator
  Acteve:
    input: Java
    url: https://code.google.com/archive/p/acteve/
  Alt-Ergo:
    os: [Linux, macOS, Windows]
    license: CeCILL-C
    input: [SMT-LIB 1.2, SMT-LIB 2, polymorphic first-order language]
    api: OCaml
    technique: SAT
    description: SAT-based SMT solver, Shostak-like and Nelson-Oppen
  angr:
    input: binary
    url: http://angr.io/
  BAP:
    input: binary
    github: BinaryAnalysisPlatform/bap
  Barcelogic:
    os: Linux
    license: proprietary
    input: [SMT-LIB 1.2]
    api: C++
    technique: DPLL
    type: SMT solver
  Beaver:
    url: http://uclid.eecs.berkeley.edu/jha/beaver-dist/beaver.html
    os: [Linux, Windows]
    license: proprietary
    input: [SMT-LIB 1.2]
    description: SAT-based SMT solver
    type: SMT solver
    api: C++
  BitBlaze:
    input: binary
    url: http://bitblaze.cs.berkeley.edu/
  Boolector:
    description: SMT solver
    paper: boolector
    type: SMT
  CATG:
    input: Java
    github: ksen007/janala2
  Chord:
    uses: [Javassist, bddbddb]
    since: 2001
    input: Java
  CIVL:
    input: C
    url: http://vsl.cis.udel.edu/civl/
  Cloud9:
    input: LLVM bitcode
    url: http://cloud9.epfl.ch/
  CREST:
    input: C
    github: jburnim/crest
  CUTE:
    since: 2005
    type: DSE
    uses: [CIL, lp_solve]
    input: C
    description: concolic testing
    url: http://lpsolve.sourceforge.net/
  CVC:
    since: 2002
    type: SMT
    description: SMT solver
    based: Chaff
  CVC Lite:
    since: 2004
    type: SMT
    description: SMT solver
  CVC3:
    description: SMT solver
    paper: cvc3
    type: SMT
    based: MiniSat
  CVC4:
    since: 2011
    type: SMT
    description: DPLL(T) SMT solver
    based: MiniSat
  DART:
    since: 2005
    input: C
    uses: lp_solve
    based: CIL
    description: random testing and direct execution
  Dyninst:
    paper: dyninst
    type: dynamic instrumentation
    description: dynamic binary instrumentator
    creator: ParaDyn
  DynamoRIO:
    paper: dynamorio
    description: dynamic binary instrumentator
  EGT:
    since: 2005
  Eraser:
    since: 1997
    based: ATOM
    description: data race detector, lockset and happens-before, binary rewriting
  EXE:
    since: 2006
    uses: STP
    input: binary
  Flayer:
    input: binary
    based: [valgrind, memcheck]
    paper: flayer
  FuzzBALL:
    input: binary
    url: http://bitblaze.cs.berkeley.edu/fuzzball.html
  GSAT:
    description: stochastic local search
    paper: gsat
  HAMPI:
    type: SMT solver
    description: string constraints
    since: 2009
  Java ThreadSanitizer:
    input: Java bytecode
  Jalangi2:
    input: JavaScript
    github: Samsung/jalangi2
  JBSE:
    input: Java
    url: http://pietrobraione.github.io/jbse/
  jCUTE:
    since: 2006
    uses: [Soot, lp_solve]
    input: Java
    type: DSE
    url: http://osl.cs.illinois.edu/software/jcute/
    description: concolic testing
  JDart:
    input: Java
    github: psycopaths/jdart
  JFuzz:
    input: Java
    url: http://people.csail.mit.edu/akiezun/jfuzz/
  Key:
    input: Java
    url: https://www.key-project.org/
  Kite:
    input: LLVM bitcode
    url: http://www.cs.ubc.ca/labs/isd/Projects/Kite/
  KLEE:
    since: 2008
    description: online DSE, constraint optimizations
    based: LLVM
    input: bitcode LLVM
    url: http://klee.github.io/
  LimeTB:
    input: Java
    url: http://www.tcs.hut.fi/Software/lime/
  Mayhem:
    input: binary
    uses: [Pin, BAP]
  miasm:
    input: binary
    github: cea-sec/miasm
  MINESTRONE:
    based: KLEE
    uses: Pin
    input: [C, C++]
  MiniSAT:
    input: DIMACS-CNF
    paper: minisat
    type: SAT solver
  Nort:
    since: 2014
    url: http://user.it.uu.se/~jarst116/norn/
    type: SMT solver
    description: string constraints
  Otter:
    input: C
    bitbucket: khooyp/otter
  PathGrind:
    input: binary
    github: codelion/pathgrind
  PEX:
    since: 2008
    input: .NET
    url: http://pex4fun.com/About.aspx
    uses: Z3
  Rex:
    type: SMT solver
    uses: Z3
    description: regular expressions
  PyExZ3:
    input: Python
    github: thomasjball/PyExZ3
  pysymemu:
    input: [x86, x64]
    github: feliam/pysymemu
  Rubyx:
    input: Ruby
  S3:
    type: SMT solver
    based: Z3-str
    description: string solver
  S3P:
    type: SMT-solver
    based: Z3
    description: string solver, progressive S3P
  SAGE:
    since: 2008
    input: x86
    description: concolic, fuzzing
    uses: Z3
  SMART:
    since: 2007
    type: DSE
  S2E:
    input: binary
    url: http://s2e.epfl.ch/
  STP:
    paper: stp
  SPIN:
    type: model checker
    since: 1997
  Splat:
    input: C
    since: 2008
    uses: STP
    description: symbolic length
  SVC:
    since: 1996
    description: validity checker
    type: SMT
  Symbolic Java Pathfinder:
    input: Java
    url: https://babelfish.arc.nasa.gov/trac/jpf/wiki/projects/jpf-symbc
  SymJS:
    input: JavaScript
  ThreadSanitizer:
    input: [c, cpp, go]
    based: valgrind
  Triton:
    input: binary
    url: https://triton.quarkslab.com/
  UC-KLEE:
    since: 2014
    based: KLEE
  Valgrind:
    paper: valgrind
    description: dynamic binary instrumentator
    ir: VEX
  VeriSoft:
    since: 1997
    type: model checker
  WSAT:
    alias: Walksat
    description: stochastic local search
    paper: gsat
  Yices:
    paper: yices
    since: 2006
    type: SMT solver
    description: SMT solver
  Z3:
    type: SMT solver
    description: SMT solver, SAT: DPLL
    since: 2008

# There are only languages uses as input or output format for the tools
# described above.

languages:
  cnf:
    - DIMACS-CNF
  smt:
    - SMT-LIB
    - SMT-LIB 2
  programming:
    - Java
    - Java bytecode
    - JavaScript
    - C
    - C++
    - Go
    - Rosette
